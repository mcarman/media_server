
version: '3.9'

#####
# Common Configs
####

#x-healthcheck:
#  healthcheck:
#    test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
#    interval: 1m30s
#    timeout: 10s
#    retries: 3
#    start_period: 40s


#####
# project name
#####
name: media_server

#####
# services section
#####
services:

  ###
  # Portainer - Manage docker contsainers and stack
  ###
  portainer:
    image: portainer/portainer-ce:linux-arm64
    container_name: portainer
    hostname: $HOSTNAME
    environment:
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-1000}"
      TZ:   "${TZ:-Etc/UTC}"
    networks:
      - media_net
    ports:
      - "9000:9000"
      - "9443:9443"
      - "8000:8000"
    volumes:
      - "/var/lib/docker:/var/lib/docker"
      - "portainer_data:/data"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped

  ###
  # Dashy alternative to heimdall port 4000
  ###
  dashy:
    # build: .
    image: lissy93/dashy
    container_name: dashy
    hostname: $HOSTNAME
    environment:
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-1000}"
      TZ:   "${TZ:-Etc/UTC}"
      DASHY_CONFIG: "/app/public/conf.yml"
      HOSTNAME: "${HOSTNAME:-example.com}"
      HOST_IP:  "${MEDIA_SERVER_IP}"
      DOMAIN:   "${DOMAIN}"
      TAUTULLI_GITHUB_AUTH: ${TAUTULLI_GITHUB_AUTH}
    networks:
      - media_net
    ports:
      - 4000:80
    volumes:
      - ./apps/dashy/config/conf.yml:/app/public/conf.yml
      - ./apps/dashy/icons:/app/public/icons
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "/app/services/healthcheck"]
      interval: 15m
      timeout: 10s
      retries: 3
      start_period: 40s  

  ###
  # Plex- Media Server
  ###  
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    hostname: $HOSTNAME
    environment:
      PLEX_UID: "${PUID:-1000}"
      PLEX_GID: "${PGID:-1000}"
      TZ:       "${TZ:-Etc/UTC}"
      VERSION:  "${PLEX_VERSION:-docker}"
      PLEX_CLAIM_FILE:   "/run/secrets/plex_claim"
      PLEX_ADVERTISE_IP: "${MEDIA_SERVER_IP}:32400"
    secrets:
      - plex_claim
    networks:
      - media_net
    ports:
      - "32400:32400/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      - "1900:1900/udp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
    volumes:
      - "./media/disc1/media/Movies:/movies"
      - "./media/disc1/media/tv:/tv"
      - "/var/lib/docker:/var/lib/docker"
      - "plex_data:/config"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
  
  ###
  #  tautulli - Utilities for Plex
  ###
  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    hostname: $HOSTNAME
    depends_on:
      plex:
        condition: service_started
    environment:
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-1000}"
      TZ:   "${TZ:-Etc/UTC}"
      GUID: "${GUID:-1000}"
      TAUTULLI_GITHUB_AUTH_FILE: /run/secrets/tautulli_github_auth
    secrets:
      - tautulli_github_auth
    networks:
      - media_net
    ports:
      - "8181:8181"
    volumes:
      - "./apps/tautulli/config:/config"
      - "./apps/plex/logs:/plexlogs"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped

  ###
  # Airsonic advanced port 4040
  ###
  airsonic:
    image: lscr.io/linuxserver/airsonic-advanced:latest
    container_name: airsonic
    environment:
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-1000}"
      TZ:   "${TZ:-Etc/UTC}"
    networks:
      - media_net
    ports:
      - 4040:4040
    volumes:
      - "./media/disc1/media/audio/music:/music"
      - "./media/disc1/media/audio/playlists:/playlists"
      - "./media/disc1/media/audio/podcasts:/podcasts"
      - "./apps/airsonic/config:/config"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped

  ###
  # syncthing to sync files between devices
  ###
  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    environment:
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-1000}"
      TZ:   "${TZ:-Etc/UTC}"
    networks:
      - media_net
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    volumes:
      - "./apps/syncthing/config:/config"
      - "./apps/syncthing/data:/data1"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped 

  ###
  # dozzle log aggregator
  ###
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    environment:
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-1000}"
      TZ:   "${TZ:-Etc/UTC}"
      DOZZLE_LEVEL: "trace"
    networks:
      - media_net
    ports:
      - "8282:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/dozzle", "healthcheck"]
      interval: 5m
      timeout: 15s
      retries: 3
      start_period: 60s

  ###
  # Watchtower to automate updates
  ###
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    hostname: $HOSTNAME
    environment:
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-1000}"
      TZ:   "${TZ:-Etc/UTC}"
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_POLL_INTERVAL: "3600"
    networks:
      - media_net
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    restart: unless-stopped
  
  ###
  # Prometheus and Grafana for monitoring
  ###
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    user: "nobody"
    environment:
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-1000}"
      TZ:   "${TZ:-Etc/UTC}"
    volumes:
      - "./apps/prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "./apps/prometheus/data:/prometheus/"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'  
    ports:
      - "9090:9090"
    networks:
      - media_net
    depends_on:
      - cadvisor
      - node-exporter
    restart: unless-stopped
  ###
  # Node Exporter and cAdvisor for monitoring
  ###
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    pid: host
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points'
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    volumes:
      - "/:/host:ro,rslave"
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro" 
    networks:
      - media_net
    ports:
      - "9100:9100"
    restart: unless-stopped

  ###
  # cAdvisor for monitoring
  ###
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.1 
    container_name: cadvisor
    privileged: true
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/etc/machine-id:/etc/machine-id"
      - "/dev/disk/:/dev/disk:ro"
      - "./apps/cadvisor/logs:/var/log/cadvisor"
    devices:
      - /dev/kmsg
    ports:
      - "8080:8080"
    networks:
      - media_net
    command:
      - '--docker_only=true'
      - '--housekeeping_interval=33s'
      - '--disable_metrics=disk,tcp,udp,percpu,sched,process,referenced_memory,cpu_topology'
      - '--log_dir="/var/log/cadvisor"'
    #other values: filesystem,cpu,precpu,load,uptime,vmstat,meminfo,netstat,perf,net,cpu,
    restart: unless-stopped
      

  ###
  # Grafana for monitoring
  ###
  grafana:
    image: grafana/grafana:latest
    user: ":"
    container_name: grafana
    depends_on:
      - prometheus
    volumes:
      - ./apps/grafana/config:/var/lib/grafana
      - ./apps/grafana/provisioning:/etc/grafana/provisioning
    environment:
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
      TZ:   ${TZ:-Etc/UTC}
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
    networks:
      - media_net
    ports:      
      - 3000:3000
    restart: unless-stopped

#####
# Volumes section  
#####
volumes:
  portainer_data:
    external: true
  plex_data:
    external: true

####
# Networks 
###
networks:
  media_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.5.0.0/24
          gateway: 10.5.0.1

#####
# Secrets
#####
secrets:
  plex_claim:
    file: ./run/secrets.d/plex_claim.txt
  cf_api_email:
    file: ./run/secrets.d/cf_api_email.txt
  cf_dns_api_key: 
    file: ./run/secrets.d/cf_dns_api_key.txt
  tautulli_github_auth:
    file: ./run/secrets.d/tautulli_github_auth.txt
