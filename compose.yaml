
version: '3.9'

#####
# Common Configs
##### 
x-environment: &default_env
    PUID: "${PUID:-1000}"
    PGID: "${PGID:-1000}"
    TZ: "${TZ:-Etc/UTC}"

#x-logging: &logging_def
#    driver: "json-file"
#    options:
#      max-size: "10m"
#      max-file: "3"
#      compress: "true"

#x-healthcheck:
#  healthcheck:
#    test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
#    interval: 1m30s
#    timeout: 10s
#    retries: 3
#    start_period: 40s


#####
# project name
#####
name: media_server

#####
# services section
#####
services:

  ###
  # Portainer - Manage docker contsainers and stack
  ###
  portainer:
    image: portainer/portainer-ce:linux-arm64
    container_name: portainer
    hostname: $HOSTNAME
    environment:
      << : *default_env
      #PUID: "${PUID:-1000}"
      #PGID: "${PGID:-1000}"
      #TZ:   "${TZ:-Etc/UTC}"
    networks:
      - media_net
    ports:
      - "9000:9000"
      - "9443:9443"
      - "8000:8000"
    volumes:
      - "/var/lib/docker:/var/lib/docker"
      - "portainer_data:/data"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped

  traefik:
    image: traefik
    container_name: traefik
    networks:
      - media-net
    ports:
      - 80:80
      - 443:443
    expose:
      - 8080 # expose the dashboard only in traefik network 
    volumes:
      - "./apps/traefik/ssl-certs:/ssl-certs"
      - "./apps/traefik/etc/traefik:/etc/traefik"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: unless-stopped
    environment:
      - CF_EMAIL_FILE="run/secrets.d/cf_email"
      - CF_API_TOKEN_FILE="run/secrets.d/cf_api_key"
    secrets:
      - cf_email
      - cf_api_token
    labels:
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it
      - "traefik.http.routers.traefik_https.rule=Host(`traefik.${DOMAIN}`)" # <== Setting the domain for the 
      - "traefik.http.routers.traefik_https.entrypoints=web,websecure"
      - "traefik.http.routers.traefik_https.service=traefik-service"
      - "traefik.http.services.traefik-service.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik_https.tls=true"
      - "traefik.http.routers.traefik_https.tls.certresolver=staging"
      - "traefik.http.routers.traefik_https.middlewares=basic-auth-global"
      - "traefik.http.middlewares.basic-auth-global.basicauth.usersfile=/etc/traefik/users"

  ###
  # Dashy alternative to heimdall port 4000
  ###
  dashy:
    # build: .
    image: lissy93/dashy
    container_name: dashy
    environment:
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-1000}"
      TZ: "${TZ:-Etc/UTC}"
      DASHY_CONFIG: "./apps/dashy/conf.yml"
    networks:
      - media_net
    ports:
      - 4000:80
    volumes:
      - ./apps/dashy/config/conf.yml:/app/public/conf.yml
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "/app/services/healthcheck"]
      interval: 15m
      timeout: 10s
      retries: 3
      start_period: 40s  

  ###
  # Plex- Media Server
  ###  
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    hostname: $HOSTNAME
    environment:
      PLEX_UID: "${PUID:-1000}"
      PLEX_GID: "${PGID:-1000}"
      TZ:       "${TZ:-Etc/UTC}"
      VERSION:  "${PLEX_VERSION:-docker}"
      PLEX_CLAIM_FILE:   "/run/secrets/plex_claim"
      PLEX_ADVERTISE_IP: "${HOST_IP}:32400"
      DOCKER_MODS: "ghcr.io/lizardbyte/themerr-plex:latest"
    secrets:
      - plex_claim
    networks:
      - media_net
    ports:
      - "32400:32400/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      - "1900:1900/udp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
    volumes:
      - "./media/disc1/media/Movies:/movies"
      - "./media/disc1/media/tv:/tv"
      - "/var/lib/docker:/var/lib/docker"
      - "plex_data:/config"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
  
  ###
  #  tautulli - Utilities for Plex
  ###
  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    depends_on:
      plex:
        condition: service_started
    environment:
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-1000}"
      TZ:   "${TZ:-Etc/UTC}"
      GUID: "${GUID:-1000}"
      TAUTULLI_GITHUB_AUTH: ${TAUTULLI_GITHUB_AUTH}
    networks:
      - media_net
    ports:
      - "8181:8181"
    volumes:
      - "./apps/tautulli/config:/config"
      - "./apps/plex/logs:/plexlogs"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped

  ###
  # Airsonic advanced port 4040
  ###
  airsonic:
    image: lscr.io/linuxserver/airsonic-advanced:latest
    container_name: airsonic
    environment:
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-1000}"
      TZ:   "${TZ:-Etc/UTC}"
    networks:
      - media_net
    ports:
      - 4040:4040
    volumes:
      - "./media/disc1/media/audio/music:/music"
      - "./media/disc1/media/audio/playlists:/playlists"
      - "./media/disc1/media/audio/podcasts:/podcasts"
      - "./apps/airsonic/config:/config"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped

  ###
  # syncthing to sync files between devices
  ###
  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    environment:
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-1000}"
      TZ:   "${TZ:-Etc/UTC}"
    networks:
      - media_net
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    volumes:
      - "./apps/syncthing/config:/config"
      - "./apps/syncthing/data:/data1"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
   #   - /path/to/data2:/data2
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped 

  ###
  # dozzle Log aggregator
  ###
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    environment:
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-1000}"
      TZ: "${TZ:-Etc/UTC}"
      DOZZLE_LEVEL: "trace"
    networks:
      - media_net
    ports:
      - "8282:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/dozzle", "healthcheck"]
      interval: 5m
      timeout: 15s
      retries: 3
      start_period: 60s

  ###
  # Watchtower to automate updates
  ###
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    hostname: $HOSTNAME
    environment:
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-1000}"
      TZ:   "${TZ:-Etc/UTC}"
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_POLL_INTERVAL: "3600"
    #  command: --interval 3600
    networks:
      - media_net
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    restart: unless-stopped

  ###
  # Dashdot - Dashboard for system stats
  ###
  dashdot:
    image: mauricenino/dashdot
    #build:
      #context: ./apps/dashdot
      #dockerfile: Dockerfile.dashdot
      #target: dev
    container_name: dashdot
    environment:
      DASHDOT_ENABLE_CPU_TEMPS: true
      DASHDOT_CPU_TEMPS_MODE: "avg" # max
      DASHDOT_WIDGET_LIST: "os,cpu,storage,ram,network"
      DASHDOT_ALWAYS_SHOW_PERCENTAGES: true
      DASHDOT_CPU_LABEL_LIST: "model,cores,frequency" # brand  thread
      DASHDOT_CPU_CORES_TOGGLE_MODE: toggle # multi-core,average
      DASHDOT_CPU_POLL_INTERVAL: 5000 # milliseconds
      DASHDOT_STORAGE_LABEL_LIST: "brand,size,type"
      DASHDOT_RAM_LABEL_LIST: "size,type,frequency" # brand
      DASHDOT_NETWORK_LABEL_LIST: "type, speed_up, speed_down, interface_speed, public_ip"
      DASHDOT_SPEED_TEST_INTERVAL: 240 # minutes, every 4 hrs
    networks:
      - media_net
    ports:
      - "3000:3000"
      - "3001:3001"
      - "3002:3002"
    volumes:
      - "./:app"
      - "/:/mnt/host:ro"
    tty: true
    user: "1000"
    working_dir: /apps
    privileged: true
    restart: unless-stopped
    command:
      - "yarn run serve"

#####
# Volumes section  
#####
volumes:
  portainer_data:
    external: true
  plex_data:
    external: true
#  pp_data:
#    external: true
#  pp_media:
#    external: true
#  pp_pg_data:
#    external: true
#  pp_redis_data:
#    external: true

####
# Networks 
###
networks:
  media_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.5.0.0/24
          gateway: 10.5.0.1

#####
# Secrets
#####
secrets:
  plex_claim:
    file: ./run/secrets.d/plex_claim.txt
  cf_email:
    file: ./run/secrets.d/cf_email.txt
  cf_api_token: 
    file: ./run/secrets.d/cf_api_token.txt